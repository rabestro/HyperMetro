{"metro.algorithm.BreadthFirstSearchSpec":{"executedFeatures":["should find a route for complex graph","should find a route for simple graph","should return an empty path if can't find a route","should thrown NPE path for an empty graph"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":4,"totalFeatures":4,"passed":4,"successRate":1.0,"time":131},"title":"Breadth First Search Algorithm","narrative":"Breadth First Search algorithm for finding the shortest paths between nodes in a graph"},"metro.algorithm.DijkstrasAlgorithmSpec":{"executedFeatures":["should find a route for a complex graph","should find a route for a medium graph","should find a route for a simple graph","should return an empty path if can't find a route","should thrown NPE for an empty graph"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":5,"totalFeatures":5,"passed":5,"successRate":1.0,"time":53},"title":"Dijkstra's Algorithm","narrative":"Dijkstra's algorithm is an algorithm for finding the fastest paths between nodes in a graph"},"metro.algorithm.GraphSpec":{"executedFeatures":["should be zero distance for an empty path","should be zero distance for any one node path","should calculate distance for a path","should return edges for a given node","should throw NPE for incorrect path"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":5,"totalFeatures":5,"passed":5,"successRate":1.0,"time":94},"title":"Generic Graph","narrative":"A simple implementation of Graph structure"},"metro.repository.MetroRepositoryJsonSpec":{"executedFeatures":["should append a new station to the end of metro line","should connect two station from different metro lines","should find metro line by name","should throw an exception for unimplemented remove operation"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":4,"totalFeatures":4,"passed":4,"successRate":1.0,"time":107},"title":"","narrative":""},"metro.repository.RepositoryAddHeadSpec":{"executedFeatures":["should add a new station to the head of metro line","should add-head a new station to the empty metro line"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":2,"totalFeatures":2,"passed":2,"successRate":1.0,"time":15},"title":"Specifications for 'add-head' command","narrative":""},"metro.repository.RepositoryAppendSpec":{"executedFeatures":["should append a new station to the empty metro line","should append a new station to the end of metro line","should thrown an exception for non existing metro line","should thrown an exception if the station is already exist"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":4,"totalFeatures":4,"passed":4,"successRate":1.0,"time":84},"title":"Specifications for 'append' command","narrative":""},"metro.repository.RepositoryConnectSpec":{"executedFeatures":["should connect the source station to the target station"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":1,"totalFeatures":1,"passed":1,"successRate":1.0,"time":16},"title":"","narrative":""},"metro.repository.RepositoryGraphSpec":{"executedFeatures":["should create a graph from one line and three stations","should create a graph from one line, one station metro schema","should create an empty graph from the empty metro schema"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":3,"totalFeatures":3,"passed":3,"successRate":1.0,"time":22},"title":"Repository 'getGraph' specifications","narrative":""},"metro.shell.MetroCommandsSpec":{"executedFeatures":["should execute add-head command","should execute append command","should execute connect command","should execute fastest-route command","should execute remove command","should execute route command"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":6,"totalFeatures":6,"passed":6,"successRate":1.0,"time":459},"title":"","narrative":""},"metro.shell.PromptSpec":{"executedFeatures":["should generate a prompt with metro name"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":1,"totalFeatures":1,"passed":1,"successRate":1.0,"time":47},"title":"","narrative":""}}