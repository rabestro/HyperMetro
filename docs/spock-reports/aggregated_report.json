{
  "metro.algorithm.BreadthFirstSearchSpec": {
    "executedFeatures": [
      "should find a route for complex graph",
      "should find a route for simple graph",
      "should return an empty path if can't find a route",
      "should thrown NPE path for an empty graph"
    ],
    "ignoredFeatures": [],
    "stats": {
      "failures": 0,
      "errors": 0,
      "skipped": 0,
      "totalRuns": 4,
      "totalFeatures": 4,
      "passed": 4,
      "successRate": 1.0,
      "time": 124
    },
    "title": "Breadth First Search Algorithm",
    "narrative": "Breadth First Search algorithm for finding the shortest paths between nodes in a graph"
  },
  "metro.algorithm.DijkstrasAlgorithmSpec": {
    "executedFeatures": [
      "should find a route for a complex graph",
      "should find a route for a medium graph",
      "should find a route for a simple graph",
      "should return an empty path if can't find a route",
      "should thrown NPE for an empty graph"
    ],
    "ignoredFeatures": [],
    "stats": {
      "failures": 0,
      "errors": 0,
      "skipped": 0,
      "totalRuns": 5,
      "totalFeatures": 5,
      "passed": 5,
      "successRate": 1.0,
      "time": 82
    },
    "title": "Dijkstra's Algorithm",
    "narrative": "Dijkstra's algorithm is an algorithm for finding the fastest paths between nodes in a graph"
  },
  "metro.algorithm.GraphSpec": {
    "executedFeatures": [
      "should be zero distance for an empty path",
      "should be zero distance for any one node path",
      "should calculate distance for a path",
      "should return edges for a given node",
      "should throw NPE for incorrect path"
    ],
    "ignoredFeatures": [],
    "stats": {
      "failures": 0,
      "errors": 0,
      "skipped": 0,
      "totalRuns": 5,
      "totalFeatures": 5,
      "passed": 5,
      "successRate": 1.0,
      "time": 123
    },
    "title": "Generic Graph",
    "narrative": "A simple implementation of Graph structure"
  },
  "metro.model.MetroLineSpec": {
    "executedFeatures": [
      "should append a station to the empty line",
      "should get the name of the metro line"
    ],
    "ignoredFeatures": [],
    "stats": {
      "failures": 0,
      "errors": 0,
      "skipped": 0,
      "totalRuns": 2,
      "totalFeatures": 2,
      "passed": 2,
      "successRate": 1.0,
      "time": 81
    },
    "title": "Model of Metro Line",
    "narrative": ""
  },
  "metro.model.MetroStationSpec": {
    "executedFeatures": [
      "should create a metro station with id and time"
    ],
    "ignoredFeatures": [],
    "stats": {
      "failures": 0,
      "errors": 0,
      "skipped": 0,
      "totalRuns": 1,
      "totalFeatures": 1,
      "passed": 1,
      "successRate": 1.0,
      "time": 8
    },
    "title": "Model of Metro Station",
    "narrative": ""
  },
  "metro.repository.MapLoaderSpec": {
    "executedFeatures": [],
    "ignoredFeatures": [
      "should parse StationId"
    ],
    "stats": {
      "failures": 0,
      "errors": 0,
      "skipped": 1,
      "totalRuns": 0,
      "totalFeatures": 1,
      "passed": 0,
      "successRate": 1.0,
      "time": 4
    },
    "title": "",
    "narrative": ""
  },
  "metro.repository.MetroRepositoryImpSpec": {
    "executedFeatures": [
      "should find metro line by name",
      "should load a metro map"
    ],
    "ignoredFeatures": [
      "should find a metro station by id"
    ],
    "stats": {
      "failures": 0,
      "errors": 0,
      "skipped": 1,
      "totalRuns": 2,
      "totalFeatures": 3,
      "passed": 2,
      "successRate": 1.0,
      "time": 118
    },
    "title": "Repository of Metro Map",
    "narrative": ""
  },
  "metro.service.MetroServiceImplSpec": {
    "executedFeatures": [
      "should add a new station at the beginning of metro line",
      "should append a new station at the end of the line",
      "should connect the source station to the target station",
      "should remove the metro station from the metro map",
      "should return metro line by it's name"
    ],
    "ignoredFeatures": [],
    "stats": {
      "failures": 0,
      "errors": 0,
      "skipped": 0,
      "totalRuns": 5,
      "totalFeatures": 5,
      "passed": 5,
      "successRate": 1.0,
      "time": 32
    },
    "title": "Metro Service",
    "narrative": ""
  },
  "metro.service.ShellCommandsSpec": {
    "executedFeatures": [
      "should execute add-head command"
    ],
    "ignoredFeatures": [],
    "stats": {
      "failures": 0,
      "errors": 0,
      "skipped": 0,
      "totalRuns": 1,
      "totalFeatures": 1,
      "passed": 1,
      "successRate": 1.0,
      "time": 32
    },
    "title": "",
    "narrative": ""
  },
  "metro.shell.PromptSpec": {
    "executedFeatures": [
      "GetPrompt"
    ],
    "ignoredFeatures": [],
    "stats": {
      "failures": 0,
      "errors": 0,
      "skipped": 0,
      "totalRuns": 1,
      "totalFeatures": 1,
      "passed": 1,
      "successRate": 1.0,
      "time": 177
    },
    "title": "",
    "narrative": ""
  },
  "metro.shell.PromptSpec": {
    "executedFeatures": [
      "should generate a prompt with metro name"
    ],
    "ignoredFeatures": [],
    "stats": {
      "failures": 0,
      "errors": 0,
      "skipped": 0,
      "totalRuns": 1,
      "totalFeatures": 1,
      "passed": 1,
      "successRate": 1.0,
      "time": 188
    },
    "title": "",
    "narrative": ""
  }
}